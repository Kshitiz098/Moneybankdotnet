@page "/dashboard"
@inject JsonDataService<ModelList> DataStoreService
@inject MoneyBanks.Service.AuthenticationService AuthenticationService
@using System.Text.Json
@inject IJSRuntime JS
@if (AuthenticationService.IsAuthenticated())
{
    <!-- Dashboard Container -->
    <div class="container-fluid py-4">

        <!-- User Greeting -->
        <div class="mb-4 text-center">
            <h2 class="fw-bold">Welcome, <span class="text-primary">Kang Smile</span>!</h2>
            <p class="text-muted">Here's your financial summary at a glance.</p>
        </div>

        <!-- Top Summary Section -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card text-white bg-success mb-3">
                    <div class="card-header">Total Cash Inflows</div>
                    <div class="card-body">
                        <h5 class="card-title">@TotalInflows.ToString("C")</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-danger mb-3">
                    <div class="card-header">Total Cash Outflows</div>
                    <div class="card-body">
                        <h5 class="card-title">@TotalOutflows.ToString("C")</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-danger mb-3">
                    <div class="card-header">Total Balance</div>
                    <div class="card-body">
                        <h5 class="card-title">@Balance.ToString("C")</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-warning mb-3">
                    <div class="card-header">Total Debts</div>
                    <div class="card-body">
                        <h5 class="card-title">@TotalDebts.ToString("C")</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-warning mb-3">
                    <div class="card-header">Total Transaction amount</div>
                    <div class="card-body">
                        <h5 class="card-title">@TotalTransactionAmount.ToString("C")</h5>
                    </div>
                </div>
            </div>
        </div>

        <!-- Additional Financial Information Section -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card text-white bg-primary mb-3">
                    <div class="card-header">Total Transactions</div>
                    <div class="card-body">
                        <h5 class="card-title">@TotalTransactions</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-info mb-3">
                    <div class="card-header">Cleared Debts Count</div>
                    <div class="card-body">
                        <h5 class="card-title">@ClearedDebtsCount</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-secondary mb-3">
                    <div class="card-header">Pending Debts Count</div>
                    <div class="card-body">
                        <h5 class="card-title">@PendingDebtsCount</h5>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending vs Cleared Debts Amount Section -->
        <div class="row">
            <div class="col-md-4">
                <div class="card text-white bg-dark mb-3">
                    <div class="card-header">Pending Debts Amount</div>
                    <div class="card-body">
                        <h5 class="card-title">@PendingDebts.ToString("C")</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-dark mb-3">
                    <div class="card-header">Cleared Debts Amount</div>
                    <div class="card-body">
                        <h5 class="card-title">@ClearedDebts.ToString("C")</h5>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Section: Sorting and Date Filtering -->
        <div class="row mt-4">
            <div class="col-md-4">
                <label for="sortBy" class="form-label">Sort By Transaction Type</label>
                <select id="sortBy" class="form-select" @onchange="SortTransactionsByType">
                    <option value="">-- Select Type --</option>
                    <option value="Debit">Debit</option>
                    <option value="Credit">Credit</option>
                    <option value="debt">Debt</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="sortOrder" class="form-label">Sort By Amount</label>
                <select id="sortOrder" class="form-select" @onchange="SortTransactionsByAmount">
                    <option value="">-- Select Order --</option>
                    <option value="Asc">Lowest to Highest</option>
                    <option value="Desc">Highest to Lowest</option>
                </select>
            </div>
            <div class="col-md-4">
                <label for="sortByTag" class="form-label">Sort By Tag</label>
                <select id="sortByTag" class="form-select" @onchange="SortTransactionsByTag">
                    <option value="">-- Select Tag --</option>
                    @foreach (var tag in tags)
                    {
                        <option value="@tag">@tag</option>
                    }
                </select>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-4">
                <label for="singleDateFilter" class="form-label">Filter By Single Date</label>
                <div class="d-flex gap-2">
                    <input type="date" class="form-control" @bind="FilterDate" />
                    <button class="btn btn-primary" @onclick="FilterTransactionsBySingleDate">Apply</button>
                </div>
            </div>
            <div class="col-md-8">
                <label for="dateRangeFilter" class="form-label">Filter By Date Range</label>
                <div class="d-flex gap-2">
                    <input type="date" class="form-control" @bind="StartDate" />
                    <input type="date" class="form-control" @bind="EndDate" />
                    <button class="btn btn-primary" @onclick="FilterTransactionsByDateRange">Apply</button>
                </div>
            </div>
        </div>

        <!-- Search Section -->
        <div class="row mt-4">
            <div class="col-md-6">
                <label for="searchByTitle" class="form-label">Search By Transaction Title</label>
                <div class="d-flex gap-2">
                    <input type="text" class="form-control" @bind="SearchTitle" placeholder="Enter transaction title" />
                    <button class="btn btn-primary" @onclick="FilterTransactionsByTitle">Search</button>
                </div>
            </div>
        </div>

        <!-- Transactions Section -->
        <div class="mt-4">
            <h4 class="fw-bold">Transactions</h4>
            <div class="list-group">
                @if (FilteredTransactions.Count == 0)
                {
                    <div class="list-group-item text-center">
                        <p>No transactions available for the selected criteria.</p>
                    </div>
                }
                else
                {
                    @foreach (var transaction in FilteredTransactions)
                    {
                        <div class="list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2">
                            <div>
                                <h6 class="mb-0">Transaction Label: @transaction.TransactionLabel</h6>
                                <h6 class="mb-0">Transaction Title: @transaction.TranactionTitle</h6>
                                <small class="text-muted">@transaction.Date.ToShortDateString()</small>
                            </div>
                            <span class="fw-bold" style="color: @(transaction.TransactionLabel == "Debit" ? "red" : "green")">
                                @transaction.Amount.ToString("C")
                            </span>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Pending Debts Section -->
        <div class="mt-4">
            <div class="col-md-6">
                <label for="debtDateRange" class="form-label">Filter Pending Debts By Date Range</label>
                <div class="d-flex gap-2">
                    <input type="date" class="form-control" @bind="DebtStartDate" />
                    <input type="date" class="form-control" @bind="DebtEndDate" />
                    <button class="btn btn-primary" @onclick="FilterPendingDebtsByDateRange">Apply</button>
                </div>
            </div>

        </div>

        <h4 class="fw-bold">Pending Debts</h4>
        <div class="list-group">
            @if (FilteredDebts.Count == 0)
            {
                <div class="list-group-item text-center">
                    <p>No pending debts available for the selected date range.</p>
                </div>
            }
            else
            {
                @foreach (var debt in FilteredDebts)
                {


                    <div class="list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2">

                        <div>
                            <h6 class="mb-0">@debt.DeptSource</h6>
                            <small class="text-muted">
                                Applied Date: @debt.DebtDate.ToShortDateString() <br />
                                Due Date: @debt.DueDate.ToShortDateString()
                            </small>
                        </div>
                        <span class="fw-bold" style="color: red">
                            Pending Amount: @(debt.DebtsAmount - debt.AmountCleared)
                        </span>

                    </div>
                }
            }
        </div>

        <!-- Import Data Section -->
        <div class="row mt-4">
            <div class="col-md-12 text-center">
                <InputFile OnChange="HandleFileSelected" class="form-control" />
                <button class="btn btn-primary mt-2" @onclick="ImportData">Import Transactions</button>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-3">
                        @errorMessage
                    </div>
                }

                @if (importSuccess)
                {
                    <div class="alert alert-success mt-3">
                        Data imported successfully!
                    </div>
                }
            </div>
        </div>

        <!-- Export Button -->
        <div class="row mt-4">
            <div class="col-md-12 text-center">
                <button class="btn btn-success" @onclick="ExportFilteredTransactionsToJson">Export Transactions</button>
            </div>
        </div>
    </div>
}



